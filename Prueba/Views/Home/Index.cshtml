@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Iniciar sesión</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
          integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://kit.fontawesome.com/9de2bfac06.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="~/css/login.css">
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <section class="ftco-section" id="app">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-12 col-lg-10">
                    <div class="wrap d-md-flex">
                        <div class="img text-center img-logo-container">
                            <img src="~/img/logo.png" alt="">
                            <h2 class="title-logo">IGRTEC</h2>
                        </div>
                        <div class="login-wrap p-4 p-md-5">
                            <div class="d-flex">
                                <div class="w-100">
                                    <h3 class="mb-4 text-center">Inicia sesión</h3>
                                </div>
                            </div>
                            <form v-on:submit.prevent="login" class="login-form" id="form-login">
                                <div class="form-group mb-3">
                                    <label class="label" for="correo">Correo</label>
                                    <input type="text" v-model="email" class="form-control" placeholder="usuario@example.com" v-on:blur="validateEmail" required>
                                    <div v-if="emailError" class="text-danger">{{ emailError }}</div>
                                </div>
                                <div class="form-group mb-3">
                                    <label class="label" for="pwd">Contraseña</label>
                                    <input type="password" v-model="password" class="form-control" placeholder="*********" v-on:blur="validatePassword" required id="pwd">
                                    <span class="toggle-password" v-on:click="togglePasswordVisibility"><i class="fas fa-eye"></i></span>
                                    <span class="clear-password" v-on:click="clearPassword"><i class="fa fa-times"></i></span>
                                    <div v-if="passwordError" class="text-danger">{{ passwordError }}</div>
                                </div>

                                <div class="mt-3">
                                    <button class="form-control btn-login" :disabled="loading" type="submit">
                                        {{ loading ? 'Cargando...' : 'INICIAR SESIÓN' }}
                                    </button>
                                </div>
                                <div v-if="errorMessage" class="alert alert-danger mt-3">
                                    {{ errorMessage }}
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        new Vue({
            el: '#app',
            data: {
                email: '',
                password: '',
                loading: false,
                errorMessage: '',
                emailError: '',
                passwordError: ''
            },
            methods: {
                login() {
                    this.loading = true;
                    this.errorMessage = ''; // Limpiar mensaje de error

                    // Validar antes de enviar al backend
                    this.validateEmail();
                    this.validatePassword();

                    // Si hay errores de validación, no enviamos la solicitud
                    if (this.emailError || this.passwordError) {
                        this.loading = false;
                        return;
                    }

                    // Enviar datos al servidor usando axios
                    axios.post('/Home/Login', {
                        email: this.email,
                        password: this.password
                    })
                        .then(response => {
                            window.location.href = response.data.redirectUrl || '/';
                        })
                        .catch(error => {
                            this.loading = false;
                            if (error.response && error.response.data) {
                                this.errorMessage = error.response.data.message || 'Hubo un error al iniciar sesión.';
                            } else {
                                this.errorMessage = 'No se pudo conectar con el servidor.';
                            }
                        });
                },
                validateEmail() {
                    if (!this.email) {
                        this.emailError = 'El correo es obligatorio.';
                    }
                    else {
                        this.emailError = '';
                    }
                },
                validatePassword() {
                    if (!this.password) {
                        this.passwordError = 'La contraseña es obligatoria.';
                    } else if (this.password.length < 6) {
                        this.passwordError = 'La contraseña debe tener al menos 6 caracteres.';
                    } else {
                        this.passwordError = '';
                    }
                },
                togglePasswordVisibility() {
                    const passwordField = document.getElementById("pwd");
                    const togglePassword = document.querySelector(".toggle-password i");

                    if (passwordField.type === "password") {
                        passwordField.type = "text";
                        togglePassword.classList.remove("fa-eye");
                        togglePassword.classList.add("fa-eye-slash");
                    } else {
                        passwordField.type = "password";
                        togglePassword.classList.remove("fa-eye-slash");
                        togglePassword.classList.add("fa-eye");
                    }
                },
                clearPassword() {
                    this.password = '';
                    this.toggleClearPasswordVisibility();
                },
                toggleClearPasswordVisibility() {
                    const clearPasswordButton = document.querySelector('.clear-password');
                    clearPasswordButton.style.display = this.password.length > 0 ? 'block' : 'none';
                }
            },
            watch: {
                password(newPassword) {
                    this.toggleClearPasswordVisibility();
                }
            }
        });
    </script>
</body>

</html>
